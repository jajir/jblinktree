������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������
round 1
values inserted: 1 000 000
threads count:
random number base: <values inserted>

m=0, s=56, mili=904, mikro=925, nano=0, original=56904925000, name= JbTree
mb=15, kb=648, b=712, name= JbTree
m=0, s=7, mili=468, mikro=647, nano=0, original=7468647000, name= synchronized map
mb=65, kb=853, b=880, name= synchronized map
m=0, s=8, mili=320, mikro=254, nano=0, original=8320254000, name= concurrent hash map
mb=84, kb=282, b=144, name= concurrent hash map
m=0, s=17, mili=950, mikro=809, nano=0, original=17950809000, name= synchronized tree map
mb=83, kb=923, b=88, name= synchronized tree map
������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������

������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������
round 2
values inserted: 1 000 000
threads count:
random number base: <values inserted>

m=0, s=58, mili=811, mikro=518, nano=0, original=58811518000, name= JbTree
mb=18, kb=532, b=1000, name= JbTree
m=0, s=8, mili=235, mikro=150, nano=0, original=8235150000, name= synchronized map
mb=62, kb=961, b=152, name= synchronized map
m=0, s=8, mili=586, mikro=448, nano=0, original=8586448000, name= concurrent hash map
mb=84, kb=283, b=24, name= concurrent hash map
m=0, s=17, mili=697, mikro=250, nano=0, original=17697250000, name= synchronized tree map
mb=83, kb=923, b=400, name= synchronized tree map������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������


before speed optimalization


������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������
round 
values inserted: 1 000 000
threads count:
random number base: <values inserted>

������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������

������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������
round 
values inserted: 1 000 000
threads count:
random number base: <values inserted>

������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������

- run it from console 
Performance test
----------------------------------------------------------------------
Following code shows influence of tested method ordering.
----------------------------------------------------------------------
    @Test
    public void test_jbTree() throws Exception {
	testFunctionality(new FunctionalitySynchronizedMap(cycleCount), "synchronized map");
	testFunctionality(new FunctionalityConcurrentHashMap(cycleCount), "concurrent hash map");
	testFunctionality(new FunctionalitySynchronizedTreeMap(cycleCount), "synchronized tree map");
	testFunctionality(new FunctionalityJbTree(cycleCount), "JbTree");
    }
results:

m=0, s=8, mili=627, mikro=715, nano=0, original=8627715000, name= synchronized map
mb=41, kb=60, b=584, name= synchronized map
m=0, s=9, mili=249, mikro=759, nano=0, original=9249759000, name= concurrent hash map
mb=84, kb=282, b=472, name= concurrent hash map
m=0, s=18, mili=822, mikro=516, nano=0, original=18822516000, name= synchronized tree map
mb=83, kb=863, b=584, name= synchronized tree map
m=1, s=61, mili=525, mikro=105, nano=0, original=61525105000, name= JbTree
mb=40, kb=465, b=736, name= JbTree
----------------------------------------------------------------------
    @Test
    public void test_jbTree() throws Exception {
	testFunctionality(new FunctionalitySynchronizedMap(cycleCount), "synchronized map");
	testFunctionality(new FunctionalityConcurrentHashMap(cycleCount), "concurrent hash map");
	testFunctionality(new FunctionalitySynchronizedTreeMap(cycleCount), "synchronized tree map");
	testFunctionality(new FunctionalityJbTree(cycleCount), "JbTree");
    }
results:

m=1, s=79, mili=235, mikro=101, nano=0, original=79235101000, name= JbTree
mb=-3, kb=-149, b=-448, name= JbTree
m=0, s=18, mili=751, mikro=902, nano=0, original=18751902000, name= synchronized tree map
mb=83, kb=924, b=792, name= synchronized tree map
m=0, s=8, mili=981, mikro=818, nano=0, original=8981818000, name= concurrent hash map
mb=84, kb=282, b=736, name= concurrent hash map
m=0, s=9, mili=249, mikro=525, nano=0, original=9249525000, name= synchronized map
mb=84, kb=280, b=888, name= synchronized map
----------------------------------------------------------------------
----------------------------------------------------------------------


